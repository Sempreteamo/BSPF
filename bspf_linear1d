library(FKF)
set.seed(123)
N=100
Time = 10
L = 1
A = 0.42
Z = 0
X <- matrix(NA, Time, N)
w <- matrix(NA, Time, N)
X1 <- rnorm(1)
X_true <- vector()
obs <- vector()
kappa = 0.5
fkf.mu <- vector()
fkf.var <- vector()

dt <- ct <- 0
Tt <- as.matrix(A)
P0 <- Zt <- Ht <- Gt <- as.matrix(1)
a0 <- X1

ESS <- function(n,w, is.log=FALSE){
  if(is.log) {
    mx <- max(w[n-1,])
    s <- sum(exp(w[n-1,]-mx))
    ess <- 1/sum((exp(w[n-1,]-mx)/s)^2)
  }else{
    s <- sum(w[n-1,])
    ess <- 1/sum((w[n-1,]/s)^2) 
  }
  return(ess)  
}

Obs <- function(){
  X_true[1] <- rnorm(1)   
  for(t in 2:Time){  #observations
    X_true[t] <- rnorm(1, X_true[t-1], 1)   #t(rnorm(d) + A%*%x)
  }
  return(rnorm(Time) + X_true)
}
obs <- Obs()
fkf.obj <- fkf(a0, P0, dt, ct, Tt, Zt, Ht, Gt, yt = t(obs[1:Time]))$logLik 

#n = L
Init <- function(){
  #X_1:L sample from q(x_1:L)=p(x_1:L|y_1:L)=p(x_L|y_1:L)*(from 1:n-1 p(x_p|y_1:p)*f)
  if(L == 1){
    X[1,] <- rnorm(N, (1+X1)/2, sqrt(1/2))
    w[1,] <- 1
  }else{
    fkf.mu <- fkf(a0, P0, dt, ct, Tt, Zt, Ht, Gt, yt = t(obs[1:L]))$att
    fkf.var <- fkf(a0, P0, dt, ct, Tt, Zt, Ht, Gt, yt = t(obs[1:L]))$Ptt
    X[L,] <- rnorm(N, fkf.mu[L], sqrt(fkf.var[L]))
    
    for(p in (L-1):1){
      for(i in 1:N){
        X[p,i] <- rnorm(1, (A*X[p+1,i]*fkf.var[p] + fkf.mu[p])/(fkf.var[p] + 1),sqrt(fkf.var[p]/(fkf.var[p] + 1)))
      }
    }
    w[L,] <- fkf(a0, P0, dt, ct, Tt, Zt, Ht, Gt, yt = t(obs[1:L]))$logLik
    
  }
  return(list(X=X, w=w))
}

X <- Init()$X
w <- Init()$w

bspf <- function(){
  for(n in (L+1):Time){
    if(ESS(n,w, is.log =  TRUE) <= kappa*N){
      w_ <- w[n-1,]/sum(w[n-1,])
      s <- sample(1:N, size=N, replace=TRUE, prob=w_) 
      mx <- max(w[n-1, ])
      Z = Z + log(mean(exp(w[n-1, ]-mx)))+mx
      
      for(i in 1:N){
        if(L == 1){
          for(i in 1:N){
            X[n,i] <- rnorm(1, (A+1)*X[n-1,s[i]]/2, sqrt(1/2))
            w[n,i] = w[n-1,i] + log((4*pi)^(-1/2)*exp((-1/2)*(A*X[n-1,i]-X[n,i])^2/2)) #?
          }
          
        }else{
          for(i in 1:N){
            a0 <- X[n-L,s[i]]
            fkf.mu <- fkf(a0, P0, dt, ct, Tt, Zt, Ht, Gt, yt = t(obs[(n-L+1):n]))$att 
            fkf.var <- fkf(a0, P0, dt, ct, Tt, Zt, Ht, Gt, yt = t(obs[(n-L+1):n]))$Ptt 
            X[n,i] <- rnorm(1, fkf.mu[L], sqrt(fkf.var[L]))
            
            for(p in (n-1):(n-L+1)){
              for(m in 1:N){
                X[p,m] <- rnorm(1, (A*X[p+1,s[m]]*fkf.var[p-n+L] + fkf.mu[p-n+L])/(fkf.var[p-n+L] + 1), sqrt(fkf.var[p-n+L]/(fkf.var[p-n+L] + 1)))
              }
            }
            
            w[n,i] <- w[n-1,i] + log((2*pi*(2+1/fkf.var[L-1])^(-1))^(1/2)) - log(2*pi*(2*pi*fkf.var[L-1])^(1/2)) +
              (-1/2)*(A*X[n-1,i]-X[n,i])^2/(2+fkf.var[L-1]) + (-1/2)*(A*X[n-1,i] - fkf.mu[L-1])^2/((2+fkf.var[L-1])*fkf.var[L-1]) +
              (-1/2)*(fkf.mu[L-1] - X[n,i])^2/((2+fkf.var[L-1])*fkf.var[L-1])
          }
        }
      }
    }else{
      if(L == 1){
        for(i in 1:N){
          X[n,i] <- rnorm(1, (A+1)*X[n-1,i]/2, sqrt(1/2))
          w[n,i] = w[n-1,i] + log((4*pi)^(-1/2)*exp((-1/2)*(A*X[n-1,i]-X[n,i])^2/2) )
        }
        
      }else{
        for(i in 1:N){
          a0 <- X[n-L,i]
          fkf.mu <- fkf(a0, P0, dt, ct, Tt, Zt, Ht, Gt, yt = t(obs[(n-L+1):n]))$att 
          fkf.var <- fkf(a0, P0, dt, ct, Tt, Zt, Ht, Gt, yt = t(obs[(n-L+1):n]))$Ptt 
          X[n,i] <- rnorm(1, fkf.mu[L], sqrt(fkf.var[L]))
          
          for(p in (n-1):(n-L+1)){
            for(m in 1:N){
              X[p,m] <- rnorm(1, (A*X[p+1,m]*fkf.var[p-n+L] + fkf.mu[p-n+L])/(fkf.var[p-n+L] + 1), sqrt(fkf.var[p-n+L]/(fkf.var[p-n+L] + 1)))
            }
          }
          
          w[n,i] = w[n-1,i] + log((2*pi*(2+1/fkf.var[L-1])^(-1))^(1/2)) - log(2*pi*(2*pi*fkf.var[L-1])^(1/2)) +
            (-1/2)*(A*X[n-1,i]-X[n,i])^2/(2+fkf.var[L-1]) + (-1/2)*(A*X[n-1,i] - fkf.mu[L-1])^2/((2+fkf.var[L-1])*fkf.var[L-1]) +
            (-1/2)*(fkf.mu[L-1] - X[n,i])^2/((2+fkf.var[L-1])*fkf.var[L-1])
        }
      }
    }
  }
  mx <- max(w[Time,])
  Z <- Z + log(mean(exp(w[Time,]-mx)))+mx
  return(list(X=X, w=w, Z=Z))
}  

#X <- bspf()$X
#w <- bspf()$w
Z <- bspf()$Z
exp(Z-fkf.obj)
